----------------2 Diabetes-----------------------

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import tensorflow as tf
import keras

from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split

from tensorflow.keras.models import Sequential
from tensorflow.keras import layers, models
from tensorflow.keras.optimizers import SGD

df= pd.read_csv('/content/diabetes.csv')
df

df.head()

y= df['Outcome'].values
x= df.drop(columns=['Outcome']).values

sc= StandardScaler()
x= sc.fit_transform(x)

x_train , x_test , y_train , y_test = train_test_split(x,y , test_size=.25)

model = Sequential([
    layers.Dense(128, activation='relu', input_shape=(x.shape[1],)),
    Dropout(0.3),
    layers.Dense(64, activation='relu'),
    Dropout(0.3),
    layers.Dense(1, activation='sigmoid')
])

model.compile(loss='binary_crossentropy' , metrics=['accuracy'] , optimizer='adam')

history =  model.fit(x_train, y_train , epochs=20,batch_size=32,validation_data=(x_test,y_test) , verbose=1)

plt.figure(figsize=(12, 4))

# plt.subplot(1, 2, 1)
plt.plot(history.history['loss'], label='Training Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')
plt.title('Training and Validation Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.legend()


plt.subplot(1, 2, 2)
plt.plot(history.history['accuracy'], label='Training Accuracy')
plt.plot(history.history['val_accuracy'], label='Validation Accuracy')
plt.title('Training and Validation Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend()

plt.tight_layout()
plt.show()
