------------12. Animal-------------

import numpy as np
import tensorflow as tf
from tensorflow.keras.optimizers import Adam
import matplotlib.pyplot as plt
from tensorflow.keras.models import Model
from tensorflow.keras.applications import MobileNetV2
from tensorflow.keras.layers import Dense,GlobalAveragePooling2D
from tensorflow.keras.preprocessing.image import ImageDataGenerator

base_model = MobileNetV2(weights='imagenet',include_top=False,input_shape=(224,224,3))

base_model.trainable = False

x= base_model.output
x = GlobalAveragePooling2D()(x)
x = Dense(128,activation='relu')(x)
predictions = Dense(10,activation='softmax')(x) 

model = Model(base_model.input , outputs=predictions)

model.compile(optimizer=Adam(learning_rate=0.001),loss='categorical_crossentropy',metrics=['accuracy'])

datagen = ImageDataGenerator(rescale=1.0/255 , validation_split=0.2,horizontal_flip=True,zoom_range=0.2,shear_range=0.2)

data_dir="C:\\Users\payal\\OneDrive\\Desktop\\DL COdes\\raw-img"
train_gen = datagen.flow_from_directory(data_dir,target_size=(224,224),batch_size=32,class_mode='categorical',subset='training')

validation_gen = datagen.flow_from_directory(data_dir,target_size=(224,224),batch_size=32,class_mode="categorical",subset='validation')

history = model.fit(train_gen,validation_data=validation_gen,epochs=5)

test_loss,test_acc = model.evaluate(validation_gen)
print("Test Loss:",test_loss)
print("Test Accuracy:",test_acc)

x_val , y_val=next(validation_gen)
predictions = model.predict(x_val)
predicted_labels = np.argmax(predictions,axis=1)

n=5
class_labels = list(train_gen.class_indices.keys())
plt.figure(figsize=(5,15))
for i in range(n):
    plt.subplot(n,1,i+1)
    plt.imshow(x_val[i])
    actual_label = class_labels[np.argmax(y_val[i])]
    predicted_label = class_labels[predicted_labels[i]]
    plt.title(f"Actual={actual_label} \nPredicted = {predicted_label}")
    plt.axis=('off')
plt.tight_layout()
plt.show()
    




